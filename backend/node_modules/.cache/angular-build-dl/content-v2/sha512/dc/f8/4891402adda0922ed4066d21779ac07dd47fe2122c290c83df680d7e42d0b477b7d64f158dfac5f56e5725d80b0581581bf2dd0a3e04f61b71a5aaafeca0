{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/addspaservice/addspaservice.component.ts","./src/app/components/addspaservice/addspaservice.component.html","./src/app/components/deletespaservice/deletespaservice.component.ts","./src/app/components/deletespaservice/deletespaservice.component.html","./src/app/components/spaservice/spaservice.component.ts","./src/app/components/spaservice/spaservice.component.html","./src/app/shared/api.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SpaserviceComponent } from './components/spaservice/spaservice.component';\nimport { AddspaserviceComponent} from './components/addspaservice/addspaservice.component';\nimport { DeletespaserviceComponent } from './components/deletespaservice/deletespaservice.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: SpaserviceComponent },\n  //{ path: 'spaservice', component: SpaserviceComponent },\n  { path: '', pathMatch: 'full', redirectTo: 'add-student' },\n  { path: 'Addspaservice', component: AddspaserviceComponent },\n  { path: 'deletespaservice/:id', component: DeletespaserviceComponent },\n  { path: 'spaservice', component: SpaserviceComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'CA2IWA';\n// }\nimport { Component, ViewChild, HostListener, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'CA2IWA';\n  opened = true;\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  ngOnInit() {\n    console.log(window.innerWidth)\n    if (window.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = true;\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    if (event.target.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55\n      this.opened = true;\n    }\n  }\n\n  isBiggerScreen() {\n    const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    if (width < 768) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">bezKoder</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"spaservice\" class=\"nav-link\">Spa Services</a>\n      </li>\n\n    </div>\n  </nav>\n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<!-- Toolbar -->\n\n<!-- <mat-toolbar color=\"primary\" class=\"header\">\n  <div>Services Records</div>\n  <span class=\"nav-tool-items\">\n    <mat-icon (click)=\"sidenav.toggle()\" class=\"hamburger\">menu</mat-icon>\n  </span>\n</mat-toolbar> -->\n\n<!-- <mat-sidenav-container>\n  Sidenav\n  <mat-sidenav #sidenav [mode]=\"isBiggerScreen() ? 'over' : 'side'\" [(opened)]=\"opened\" [fixedInViewport]=\"true\"\n    [fixedTopGap]>\n    <mat-nav-list>\n      <a mat-list-item routerLinkActive=\"active\" routerLink=\"/spaservice\">\n        <mat-icon>add</mat-icon> Add Spa service\n      </a>\n      <a mat-list-item routerLinkActive=\"active\" routerLink=\"/spaservice\">\n        <mat-icon>format_list_bulleted</mat-icon> View Services\n      </a>\n    </mat-nav-list>\n  </mat-sidenav> -->\n\n  <!-- Main content -->\n  <!-- <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n//import { AngularMaterialModule } from ''; //angular material tools for browser\n//import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SpaserviceComponent } from './components/spaservice/spaservice.component';\nimport { AddspaserviceComponent } from './components/addspaservice/addspaservice.component';\nimport { DeletespaserviceComponent } from './components/deletespaservice/deletespaservice.component';\n\n/* Angular 8 CRUD services */\nimport { ApiService } from './shared/api.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpaserviceComponent,\n    AddspaserviceComponent,\n    DeletespaserviceComponent\n    //AngularMaterialModule\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  //schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addspaservice',\n  templateUrl: './addspaservice.component.html',\n  styleUrls: ['./addspaservice.component.css']\n})\nexport class AddspaserviceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>addspaservice works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deletespaservice',\n  templateUrl: './deletespaservice.component.html',\n  styleUrls: ['./deletespaservice.component.css']\n})\nexport class DeletespaserviceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>deletespaservice works!</p>\n","import { Component, OnInit } from '@angular/core';\n//import { GetSpaServicesService } from './../../services/get-spa-services.service';\nimport { Router } from '@angular/router';\nimport { ApiService } from './../../shared/api.service';\nimport { Spaservice } from './../../shared/spaservice';\n\n@Component({\n  selector: 'app-spaservice',\n  templateUrl: './spaservice.component.html',\n  styleUrls: ['./spaservice.component.css']\n})\n\nexport class SpaserviceComponent implements OnInit {\n //spa;\n spa: any = [];\n  //dataSource: MatTableDataSource<Student>;\n  //@ViewChild(MatPaginator) paginator: MatPaginator;\n  //displayedColumns: string[] = ['_id', 'student_name', 'student_email', 'section', 'action'];\n\n\n  constructor(private getSpaService: ApiService) {\n    //this.getSpaService.GetSpaservices().subscribe(data => {\n      //this.spa = data;\n      //this.dataSource = new MatTableDataSource<Student>(this.StudentData);\n      // setTimeout(() => {\n      //   this.dataSource.paginator = this.paginator;\n      // }, 0);\n    //})\n  }\n\n\n\n  ngOnInit(): void {\n     this.spa = this.getSpaService.GetSpaservices();\n  }\n\n}\n","<div>\n  <h3>users collection</h3>\n  <div class=\"row\">\n  <p>spaservice works! 1</p>\n    <div class=\"col-sm-4\" *ngFor=\"let spa of spa | async\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n        <p>spaservice works!</p>\n          <a>{{spa}}</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","// import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class ApiService {\n\n//   constructor() { }\n// }\nimport { Injectable } from '@angular/core';\n//import { Spaservice } from './spaservice';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  endpoint: string = 'http://localhost:4000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) { }\n\n  // Get all spaservices\n  GetSpaservices() {\n    return this.http.get(`${this.endpoint}`);\n  }\n\n  // Error handling\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}