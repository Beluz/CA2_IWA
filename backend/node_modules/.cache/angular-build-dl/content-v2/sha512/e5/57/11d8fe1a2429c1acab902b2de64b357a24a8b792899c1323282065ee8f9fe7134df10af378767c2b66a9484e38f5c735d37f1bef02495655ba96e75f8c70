{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/addspaservice/addspaservice.component.ts","webpack:///src/app/components/addspaservice/addspaservice.component.html","webpack:///src/app/components/deletespaservice/deletespaservice.component.ts","webpack:///src/app/components/deletespaservice/deletespaservice.component.html","webpack:///src/app/components/spaservice/spaservice.component.ts","webpack:///src/app/components/spaservice/spaservice.component.html","webpack:///src/app/shared/api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","opened","console","log","window","innerWidth","sidenav","fixedTopGap","event","target","width","document","documentElement","clientWidth","body","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddspaserviceComponent","DeletespaserviceComponent","SpaserviceComponent","getSpaService","spa","GetSpaservices","ApiService","http","endpoint","headers","set","get","error","errorMessage","ErrorEvent","message","status","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SpaserviceComponent } from './components/spaservice/spaservice.component';\nimport { AddspaserviceComponent} from './components/addspaservice/addspaservice.component';\nimport { DeletespaserviceComponent } from './components/deletespaservice/deletespaservice.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: SpaserviceComponent },\n  //{ path: 'spaservice', component: SpaserviceComponent },\n  { path: '', pathMatch: 'full', redirectTo: 'add-student' },\n  { path: 'Addspaservice', component: AddspaserviceComponent },\n  { path: 'deletespaservice/:id', component: DeletespaserviceComponent },\n  { path: 'spaservice', component: SpaserviceComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'CA2IWA';\n// }\nimport { Component, ViewChild, HostListener, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'CA2IWA';\n  opened = true;\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  ngOnInit() {\n    console.log(window.innerWidth)\n    if (window.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = true;\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    if (event.target.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55\n      this.opened = true;\n    }\n  }\n\n  isBiggerScreen() {\n    const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    if (width < 768) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">bezKoder</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"spaservice\" class=\"nav-link\">Spa Services</a>\n      </li>\n\n    </div>\n  </nav>\n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<!-- Toolbar -->\n\n<!-- <mat-toolbar color=\"primary\" class=\"header\">\n  <div>Services Records</div>\n  <span class=\"nav-tool-items\">\n    <mat-icon (click)=\"sidenav.toggle()\" class=\"hamburger\">menu</mat-icon>\n  </span>\n</mat-toolbar> -->\n\n<!-- <mat-sidenav-container>\n  Sidenav\n  <mat-sidenav #sidenav [mode]=\"isBiggerScreen() ? 'over' : 'side'\" [(opened)]=\"opened\" [fixedInViewport]=\"true\"\n    [fixedTopGap]>\n    <mat-nav-list>\n      <a mat-list-item routerLinkActive=\"active\" routerLink=\"/spaservice\">\n        <mat-icon>add</mat-icon> Add Spa service\n      </a>\n      <a mat-list-item routerLinkActive=\"active\" routerLink=\"/spaservice\">\n        <mat-icon>format_list_bulleted</mat-icon> View Services\n      </a>\n    </mat-nav-list>\n  </mat-sidenav> -->\n\n  <!-- Main content -->\n  <!-- <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n//import { AngularMaterialModule } from ''; //angular material tools for browser\n//import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SpaserviceComponent } from './components/spaservice/spaservice.component';\nimport { AddspaserviceComponent } from './components/addspaservice/addspaservice.component';\nimport { DeletespaserviceComponent } from './components/deletespaservice/deletespaservice.component';\n\n/* Angular 8 CRUD services */\nimport { ApiService } from './shared/api.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpaserviceComponent,\n    AddspaserviceComponent,\n    DeletespaserviceComponent\n    //AngularMaterialModule\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  //schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addspaservice',\n  templateUrl: './addspaservice.component.html',\n  styleUrls: ['./addspaservice.component.css']\n})\nexport class AddspaserviceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>addspaservice works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deletespaservice',\n  templateUrl: './deletespaservice.component.html',\n  styleUrls: ['./deletespaservice.component.css']\n})\nexport class DeletespaserviceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>deletespaservice works!</p>\n","import { Component, OnInit } from '@angular/core';\n//import { GetSpaServicesService } from './../../services/get-spa-services.service';\nimport { Router } from '@angular/router';\nimport { ApiService } from './../../shared/api.service';\nimport { Spaservice } from './../../shared/spaservice';\n\n@Component({\n  selector: 'app-spaservice',\n  templateUrl: './spaservice.component.html',\n  styleUrls: ['./spaservice.component.css']\n})\n\nexport class SpaserviceComponent implements OnInit {\n //spa;\n spa: any = [];\n  //dataSource: MatTableDataSource<Student>;\n  //@ViewChild(MatPaginator) paginator: MatPaginator;\n  //displayedColumns: string[] = ['_id', 'student_name', 'student_email', 'section', 'action'];\n\n\n  constructor(private getSpaService: ApiService) {\n    //this.getSpaService.GetSpaservices().subscribe(data => {\n      //this.spa = data;\n      //this.dataSource = new MatTableDataSource<Student>(this.StudentData);\n      // setTimeout(() => {\n      //   this.dataSource.paginator = this.paginator;\n      // }, 0);\n    //})\n  }\n\n\n\n  ngOnInit(): void {\n     this.spa = this.getSpaService.GetSpaservices();\n  }\n\n}\n","<div>\n  <h3>users collection</h3>\n  <div class=\"row\">\n  <p>spaservice works! 1</p>\n    <div class=\"col-sm-4\" *ngFor=\"let spa of spa | async\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n        <p>spaservice works!</p>\n          <a>{{spa}}</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","// import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class ApiService {\n\n//   constructor() { }\n// }\nimport { Injectable } from '@angular/core';\n//import { Spaservice } from './spaservice';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  endpoint: string = 'http://localhost:4000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) { }\n\n  // Get all spaservices\n  GetSpaservices() {\n    return this.http.get(`${this.endpoint}`);\n  }\n\n  // Error handling\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}